name: Build
on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: swt2
          POSTGRES_DB: swt2
          POSTGRES_PASSWORD: swt2
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U swt2 -d swt2"
          --health-timeout=60s
          --health-interval=15s
          --health-retries=5
    strategy:
      matrix:
        browser: [chrome, firefox]  # Параллельный запуск на этих браузерах

    steps:
      # 1
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
           fetch-depth: 0   # Отключаем мелкое клонирование для лучшей актуальности анализа
     
      # 2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
           distribution: 'zulu'
           java-version: '17'
           
      # 3
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      # 4
      - name: Build backend project
        working-directory: ./bogenliga
        run: |
          java -version
          export MAVEN_OPTS="--add-opens java.base/java.lang=ALL-UNNAMED"
          mvn clean -T 1C

      # 5
      - name: Start backend
        working-directory: ./bogenliga
        run: |
          mvn spring-boot:run &

      # 6
      - name: Clone frontend repository
        uses: actions/checkout@v2
        with:
          repository: aminaacid/bogenliga_bbf  # Укажите URL вашего репозитория с фронтендом
          token: ${{ secrets.GITHUB_TOKEN }}   # Используйте токен для доступа (если требуется)

      # 7
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Установите нужную версию Node.js

      # 8
      - name: Install frontend dependencies
        working-directory: ./bogenliga
        run: |
          npm install  # Или yarn install, если вы используете yarn

      # 9
      - name: Build frontend
        working-directory: ./bogenliga
        run: |
          npm run build  # Или yarn build, если вы используете yarn

      # 10
      - name: Start frontend
        working-directory: ./bogenliga
        run: |
          npm start &  # Или yarn start, если вы используете yarn

      # 11
      - name: Run Cypress tests in parallel
        run: |
          npx cypress run --browser ${{ matrix.browser }} --record --parallel --key ${{ secrets.CYPRESS_RECORD_KEY }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}  # Добавьте ваш ключ в GitHub Secrets

      # 12
      - name: Build completion
        if: success()
        run: echo "Build and tests completed successfully!"
